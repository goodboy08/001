d={1001:'李梅',1002:'王华',1003:'张峰'}
print(d)   # {1001: '李梅', 1002: '王华', 1003: '张峰'}

# 向字典中添加数据
d[1004]='张丽丽'  # 直接使用赋值运算符=向字典中添加数据
print(d)  # {1001: '李梅', 1002: '王华', 1003: '张峰', 1004: '张丽丽'}

# 获取字典中所有的key
keys=d.keys()  # d.key()结果是dict_keys，Python中一种内部数据类型，专用于表示字典的key
# 如果希望更好的显示数据，可以使用list或者tuple转成相应的数据类型
print(keys)   # dict_keys([1001, 1002, 1003, 1004])'
print(list(keys))  # [1001, 1002, 1003, 1004]
print(tuple(keys)) # (1001, 1002, 1003, 1004)

# 获取字典中所有的value
values=d.values()
print(values)  # dict_values(['李梅', '王华', '张峰', '张丽丽'])
print(list(values))  # ['李梅', '王华', '张峰', '张丽丽']
print(tuple(values)) # ('李梅', '王华', '张峰', '张丽丽')

# 字典遍历时用到的一个方法items
items=d.items()
print(items)  # dict_items([(1001, '李梅'), (1002, '王华'), (1003, '张峰'), (1004, '张丽丽')])
print(list(items))  # [(1001, '李梅'), (1002, '王华'), (1003, '张峰'), (1004, '张丽丽')]
print(tuple(items)) # ((1001, '李梅'), (1002, '王华'), (1003, '张峰'), (1004, '张丽丽'))

lst=list(items)  # 将字典中的数据转成键-值对的形式，以元组的方式进行展示
print(lst)  # [(1001, '李梅'), (1002, '王华'), (1003, '张峰'), (1004, '张丽丽')]

# 直接可以使用dict函数将[(1001, '李梅'), (1002, '王华'), (1003, '张峰'), (1004, '张丽丽')]，转成字典
d=dict(lst)
print(d)  # {1001: '李梅', 1002: '王华', 1003: '张峰', 1004: '张丽丽'}

# 使用pop函数
print(d.pop(1001))
print(d)
# 李梅
# {1002: '王华', 1003: '张峰', 1004: '张丽丽'}
print(d.pop(1008,'不存在'))  # 不存在

# 随机删除
print(d.popitem())  # 先获取key-value对
print(d)
# (1004, '张丽丽')
# {1002: '王华', 1003: '张峰'}

# 清空字典中所有的元素
d.clear()
print(d)  # {}

# Python中一切的皆元素，而每一个对象都有一个布尔值
print(bool(d))  # 空字典的bool值为False